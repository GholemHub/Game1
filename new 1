using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1
{   
    public Karta
    {
        public Image Point_Map;
        public int water;
    }
    public partial class Form1 : Form
    {

        public Bitmap playerTexture = Resource1.player;
        public Bitmap animacja = Resource1.PlayerAnimatoin;
        public Bitmap GameBackGround = Resource1.backGround;

        //Image An;

        private int currFrame = 0;
        int currAnimation = 0;
        
        private Point p = new Point(100, 100);
        private int Difference = 150;
        int i = 5, j = 5;

        Graphics g;
        
        public Form1()
        {
            InitializeComponent();

            //g.DrawImage

        //    An = new Bitmap("E:\\FarmIP\\WindowsFormsApp1\\Elements\\ani.png");
            
            timer2.Interval = 100;
            timer2.Tick += new EventHandler(update);
            timer2.Start();

            this.KeyDown += new KeyEventHandler(KeyHop);

            
            //InitializeComponent();
            
            DrawMap();
        }
        private void KeyHop(object sender, KeyEventArgs e)
        {
            switch (e.KeyCode)
            {
                case Keys.Left:
                    currAnimation = 4;
                    break;
                case Keys.Right:
                    currAnimation = 1;
                    break;
                case Keys.Down:
                    currAnimation = 2;
                    break;
                case Keys.Up:
                    currAnimation = 3;
                    break;
            }
        }


        private void update(object sender, EventArgs e)
        {
            playAnimation();
            currFrame++;
            if (currFrame == 5) currFrame = 0;   
        }

        private void playAnimation()
        {
            if (currAnimation != 0)
            {
                Image part = new Bitmap(100, 100);
                Graphics a = Graphics.FromImage(part);

                a.DrawImage(animacja, 0, 0, new Rectangle(new Point(100 * currFrame, 100 * currAnimation), new Size(100, 100)), GraphicsUnit.Pixel);

                pictureBox2.Size = new Size(100, 100);
                pictureBox2.Image = part;
            }
        }

        int[,] map = {  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 2, 2, 2, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 3, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 3, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
        };

        private void DrawMap()
        {
            pictureBox1.Image = new Bitmap(pictureBox1.Width, pictureBox1.Height);
            g = Graphics.FromImage(pictureBox1.Image);

            g.DrawImage(GameBackGround, new Rectangle(p.X + Difference, p.Y + Difference, 1918, 1084));
            //g.DrawImage(GameBackGround, new Rectangle(0, 0, 1918, 1084));
           
            g.DrawImage(playerTexture, new Rectangle(250, 250, 100, 100));
            g.DrawImage(playerTexture, new Rectangle(p.X, p.Y, 100, 100));
            /*
            for(int x=0; x<10; x++)
            {
                for(int y=0; y<10; y++)
                {
                    Color c;
                    int fielSizeX = pictureBox1.Width/10;
                    int fielSizeY = pictureBox1.Height / 10;
                    if (map[x, y] == 1)
                    {
                        c = Color.Brown;
                    }
                    else if (map[x, y] == 2)
                    {
                        c = Color.Green;
                    }
                    else if (map[x, y] == 3)
                    {
                        c = Color.Blue;
                    }
                    else
                    {
                        c = Color.Yellow;
                    }
                    g.FillEllipse(new SolidBrush(c),
                                  x * fielSizeX,
                                  y * fielSizeY,
                                  fielSizeX,
                                  fielSizeY);
                }
            }
            */
            pictureBox1.Refresh();
        }
/*        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            //g = e.Graphics;

            //var playerRect = new Rectangle(targetPosition.X - 50, targetPosition.Y - 50, 100, 100);

            //g.DrawImage(playerTexture, new Rectangle(p.X, p.Y, 100, 100));
        }*/
        
        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            switch (e.KeyCode)
            {
                case Keys.Left:
                    if (map[i - 1, j] != 1) { i--; p.X -= 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Right:
                    if (map[i+1, j] != 1) { i++; p.X += 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Down:
                    if (map[i, j+1] != 1) {j++; p.Y += 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Up:
                    if (map[i, j - 1] != 1) { j--; p.Y -= 100; }
                    else MessageBox.Show("Stop");
                    break;
            }
            DrawMap();
        }

        private void pictureBox1_MouseDown(object sender, MouseEventArgs e)
        {
            p = e.Location;
            DrawMap();
        }
        
        private void OKP(object sender, KeyEventArgs e)
        {
            
        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void Form1_KeyDown1(object sender, KeyEventArgs e)
        {
            throw new NotImplementedException();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Sasha");
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            
        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {

        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            DrawMap();
        }
    }
}
//как сделать корректную заливку фона
//как поместить карту(Логическую) по средине
//как сдклать анимацию в движении