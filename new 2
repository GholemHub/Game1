using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Game
{
    public partial class Form1 : Form
    {
        public Bitmap playerTexture =Res.player;
        public Bitmap animacja = Res.PlayerAnimatoin;
        public Bitmap GameBackGround = Res.backGround;

        private int currFrame = 0;
        int currAnimation = 0; 

        private Point p = new Point(100, 100);
        private int Difference = 150;
        int i = 5, j = 5;

        Graphics g;

        public Form1()
        {
            InitializeComponent();

            timer2.Interval = 100;
            timer2.Tick += new EventHandler(update);
            timer2.Start();

            this.KeyDown += new KeyEventHandler(KeyHop);

            DrawMap();
        }

        private void KeyHop(object sender, KeyEventArgs e)
        {
            switch (e.KeyCode)
            {
                case Keys.Left:
                    currAnimation = 4;
                    break;
                case Keys.Right:
                    currAnimation = 1;
                    break;
                case Keys.Down:
                    currAnimation = 2;
                    break;
                case Keys.Up:
                    currAnimation = 3;
                    break;
            }
        }
        private void update(object sender, EventArgs e)
        {
            playAnimation();
            currFrame++;
            if (currFrame == 5) currFrame = 0;
        }

        private void playAnimation()
        {
            if (currAnimation != 0)
            {
                Image part = new Bitmap(100, 100);
                Graphics a = Graphics.FromImage(part);

                a.DrawImage(animacja, 0, 0, new Rectangle(new Point(100 * currFrame, 100 * currAnimation), new Size(100, 100)), GraphicsUnit.Pixel);

                pictureBox2.Size = new Size(100, 100);
                pictureBox2.Image = part;
            }
        }

        int[,] map = {  { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 2, 2, 2, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 3, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 3, 0, 0, 0, 0, 1 },
                        { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1 },
                        { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
        };

        public static object Resource1 { get; private set; }

        private void DrawMap()
        {
           pictureBox1.Image = new Bitmap(pictureBox1.Width, pictureBox1.Height);
           g = Graphics.FromImage(pictureBox1.Image);

            g.DrawImage(GameBackGround, new Rectangle(p.X + Difference, p.Y + Difference, 1918, 1084));

            g.DrawImage(playerTexture, new Rectangle(250, 250, 100, 100));
            g.DrawImage(playerTexture, new Rectangle(p.X, p.Y, 100, 100));
          
            pictureBox1.Refresh();
        }
        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            switch (e.KeyCode)
            {
                case Keys.Left:
                    if (map[i - 1, j] != 1) { i--; p.X -= 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Right:
                    if (map[i + 1, j] != 1) { i++; p.X += 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Down:
                    if (map[i, j + 1] != 1) { j++; p.Y += 100; }
                    else MessageBox.Show("Stop");
                    break;
                case Keys.Up:
                    if (map[i, j - 1] != 1) { j--; p.Y -= 100; }
                    else MessageBox.Show("Stop");
                    break;
            }
            DrawMap();
        }

        private void pictureBox1_MouseDown(object sender, MouseEventArgs e)
        {
            p = e.Location;
            DrawMap();
        }
        private void timer1_Tick(object sender, EventArgs e)
        {
            DrawMap();
        }
        
    }
}
